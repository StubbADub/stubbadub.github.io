{"version":3,"sources":["utils/timelines.js","containers/EmotionChip.jsx","components/Emotions.jsx","components/Emotion.jsx","index.js"],"names":["play","pathname","node","appears","delay","timeline","Timeline","paused","from","autoAlpha","ease","Power1","easeIn","getPageTransitionTimeline","EmotionChip","label","icon","iconFirst","url","cssClass","chipObj","className","indexOf","to","href","target","Emotions","useEffect","document","body","emotions","map","i","k","title","toLowerCase","Emotion","backgroundObj","emotion","useParams","emotionObj","find","light","style","backgroundColor","color","positive","links","backgrounds","Math","floor","random","length","ReactDOM","render","location","key","TransitionGroup","component","Transition","appear","onEnter","onExit","easeOut","exit","timeout","enter","exact","path","getElementById"],"mappings":"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","file":"static/js/main.019db451.chunk.js","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getPageTransitionTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  timeline\r\n    .from(node, 0.3, {autoAlpha: 0, delay, ease: Power1.easeIn })\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.2;\r\n  let timeline\r\n\r\n  timeline = getPageTransitionTimeline(node, delay);\r\n  timeline.play();  \r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n","import React, {useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './EmotionChip.css';\r\n\r\nconst EmotionChip = ({label, icon, iconFirst, url, cssClass = ''}) => {\r\n    let chipObj = <span className={`e-chip ${cssClass}`}> \r\n        {iconFirst&&<i>{icon}</i>}\r\n        &nbsp;{label}&nbsp;\r\n        {!iconFirst&&<i>{icon}</i>}\r\n    </span>;\r\n\r\n    if(url){\r\n        if(url.indexOf('/')==0){\r\n            return <Link to={url}>{chipObj}</Link>\r\n        }else{\r\n            return <a href={url} target={\"_blank\"}>{chipObj}</a>\r\n        }\r\n    }\r\n    return(chipObj);\r\n}\r\nexport default EmotionChip;","import { Chip } from 'material-ui';\r\nimport React, {useEffect} from 'react';\r\nimport styles from './Emotions.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport Footer from '../components/Footer';\r\nimport emotions from '../data/emotions.json';\r\n\r\nconst Emotions = () => {\r\n    useEffect(() => {        \r\n        document.body.className='emotions';\r\n    });\r\n    \r\n    return(\r\n    <div className=\"emotions-container\">\r\n        <h3>How Do You Feel?</h3>\r\n        {emotions.map((i,k)=>{ return <EmotionChip label={i.title} icon={i.icon} iconFirst={false} url={`/${i.title.toLowerCase()}`} key={k}/>})}\r\n    </div>);\r\n}\r\nexport default Emotions;","import React, {useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport styles from './Emotion.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport emotions from '../data/emotions.json';\r\n\r\n\r\nconst Emotion = ({backgroundObj}) => {\r\n    let {emotion} = useParams();\r\n    emotion = emotion.toLowerCase();\r\n    \r\n    const emotionObj = emotions.find(i=>i.title.toLowerCase()==emotion);\r\n    \r\n    \r\n    useEffect(() => {      \r\n        if(!emotionObj)  \r\n            return;\r\n\r\n\r\n\r\n        document.body.className = `emotion ${backgroundObj.light?'light':'dark'}`;\r\n        document.body.style.backgroundColor = backgroundObj.color;\r\n\r\n        return () => {\r\n            document.body.className = ``;\r\n            document.body.style.backgroundColor = null;\r\n        };\r\n\r\n    },[emotionObj]);\r\n\r\n    return(\r\n    <div className=\"emotion-container\">\r\n        <div className=\"title\">\r\n            <h2>It's totally</h2><h1>OK</h1><h3>to feel {emotionObj.title.toLowerCase()} <i>{emotionObj.icon}</i></h3>\r\n        </div>\r\n        <div className=\"links\">\r\n            {!emotionObj.positive && <EmotionChip label={\"Call Local Helpline\"} icon={\"📞\"} iconFirst={true} />}\r\n            {emotionObj.links.map((i,k)=>{ return i.title ? <EmotionChip label={i.title} icon={i.icon} iconFirst={true} url={i.url} key={k}/> : null})}            \r\n            <EmotionChip cssClass={\"share\"} label={\"Share\"} icon={\"↗️\"} iconFirst={true} />\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Emotion;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport {play, exit} from './utils/timelines';\nimport backgrounds from './data/backgrounds.json';\n\nimport './index.css';\nimport Emotions from './components/Emotions';\nimport Emotion from './components/Emotion';\n\n/* Random background selection for selected emotion */\nconst backgroundNum = Math.floor(Math.random() * backgrounds.length);\nconst backgroundObj = backgrounds[backgroundNum];\n\nReactDOM.render(\n      <Router>\n          <Route render={({location})=>{\n            const { pathname, key } = location\n            return(\n              <TransitionGroup component={null}>\n                <Transition\n                  key={key}\n                  appear={true}\n                  onEnter={(node, appears) => play(pathname, node, appears)}\n                  onExit={(node, appears) => exit(node, appears)}\n                  timeout={{enter: 750, exit: 0}}\n                >\n                  <Switch location={location}>\n                    <Route exact path=\"/\"><Emotions/></Route>\n                    <Route path=\"/:emotion\"><Emotion backgroundObj={backgroundObj}/></Route>\n                  </Switch>\n                </Transition>                \n              </TransitionGroup>\n            )\n          }}/>\n      </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}