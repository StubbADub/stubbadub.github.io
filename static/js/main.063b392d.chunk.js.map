{"version":3,"sources":["utils/timelines.js","containers/EmotionChip.jsx","components/Footer.jsx","components/Emotions.jsx","components/Emotion.jsx","index.js"],"names":["play","pathname","node","appears","delay","document","body","className","timeline","Timeline","paused","from","autoAlpha","ease","Power1","easeIn","getPageTransitionTimeline","EmotionChip","label","icon","iconFirst","url","cssClass","chipClick","chipObj","onClick","indexOf","to","href","target","Footer","Date","getFullYear","Emotions","data","useLayoutEffect","emotions","map","i","k","title","toLowerCase","shareApi","navigator","share","location","then","catch","console","error","Emotion","emotion","useParams","useState","country","setCountry","emotionObj","find","useEffect","callback","backgroundNum","Math","floor","random","backgrounds","length","backgroundObj","style","backgroundColor","color","fetch","r","json","helplines","ipdata","filter","country_name","positive","phones","links","ReactDOM","render","key","TransitionGroup","component","Transition","appear","onEnter","onExit","easeOut","exit","timeout","enter","exact","path","getElementById"],"mappings":"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","file":"static/js/main.063b392d.chunk.js","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getPageTransitionTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  timeline\r\n    .from(node, 0.4, {autoAlpha: 0, delay, ease: Power1.easeIn })\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.4;\r\n  let timeline\r\n\r\n  if(pathname == '/'){\r\n    document.body.className='emotions';\r\n  }\r\n\r\n  timeline = getPageTransitionTimeline(node, delay);\r\n  timeline.play();  \r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.4, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n","import React, {useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './EmotionChip.css';\r\n\r\nconst EmotionChip = ({label, icon, iconFirst, url, cssClass = '', chipClick}) => {\r\n    let chipObj = <span className={`e-chip ${cssClass}`} onClick={chipClick}> \r\n        {iconFirst&&<i>{icon}</i>}\r\n        &nbsp;{label}&nbsp;\r\n        {!iconFirst&&<i>{icon}</i>}\r\n    </span>;\r\n\r\n    if(url){\r\n        if(url.indexOf('/')==0){\r\n            return <Link to={url}>{chipObj}</Link>\r\n        }else{\r\n            return <a href={url} target={\"_blank\"}>{chipObj}</a>\r\n        }\r\n    }\r\n    return(chipObj);\r\n}\r\nexport default EmotionChip;","import React, {useEffect} from 'react';\r\nimport styles from './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n    <div className=\"footer\">\r\n        <a href=\"https://itstotallyok.com\"><i>💚</i><b>itstotallyok</b>.com</a>\r\n        <span>©Fade Rudman {(new Date()).getFullYear()}. All Rights Reserved.</span>\r\n    </div>);\r\n}\r\nexport default Footer;","import { Chip } from 'material-ui';\r\nimport React, {useEffect, useLayoutEffect} from 'react';\r\nimport styles from './Emotions.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport Footer from '../components/Footer';\r\nimport emotions from '../data/emotions.json';\r\n\r\nconst Emotions = ({data}) => {\r\n    useLayoutEffect(() => {        \r\n        document.body.className='emotions';\r\n    });\r\n    \r\n    return(\r\n    <>\r\n        <div className=\"emotions-container\">\r\n            <h3>How Do You Feel?</h3>\r\n            {data.emotions.map((i,k)=>{ return <EmotionChip label={i.title} icon={i.icon} iconFirst={false} url={`/${i.title.toLowerCase()}`} key={k}/>})}\r\n        \r\n        </div>\r\n        <Footer/>\r\n    </>);\r\n}\r\nexport default Emotions;","import React, {useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport styles from './Emotion.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport Footer from '../components/Footer';\r\n\r\n\r\nconst geoLocation = (callback) => {\r\n    fetch(`/data/helplines.json`) // Get the helplines in each country \r\n    .then((r) => r.json())\r\n    .then((helplines) =>{\r\n        fetch(`https://ipapi.co/json/`) // Get country by ip\r\n        .then((r) => r.json())\r\n        .then((ipdata) =>{\r\n            var country = helplines.filter(i=>i.country == ipdata.country_name); \r\n            callback(country[0]||{});\r\n        })\r\n    })\r\n}\r\n\r\n\r\nconst shareApi = () => {\r\n    if(navigator.share){\r\n        navigator.share({\r\n            title: \"It's Totally OK\",\r\n            url: document.location.href\r\n          }).then(() => {})\r\n          .catch(console.error);\r\n    }\r\n}\r\n\r\nconst Emotion = ({data}) => {\r\n    let {emotion} = useParams();\r\n    const [country, setCountry] = useState({})\r\n    emotion = emotion.toLowerCase();\r\n    \r\n    const emotionObj = data.emotions.find(i=>i.title.toLowerCase()==emotion);\r\n    \r\n    \r\n    useEffect(() => {      \r\n        if(!emotionObj)  \r\n            return;\r\n\r\n        const backgroundNum = Math.floor(Math.random() * data.backgrounds.length);\r\n        const backgroundObj = data.backgrounds[backgroundNum];\r\n\r\n        document.body.className = `emotion ${backgroundObj[\"light-content\"]?'light':'dark'}`;\r\n        document.body.style.backgroundColor = backgroundObj.color;\r\n\r\n        geoLocation(setCountry);\r\n\r\n        return () => {\r\n            document.body.className = ``;\r\n            document.body.style.backgroundColor = null;\r\n        };\r\n\r\n    },[emotionObj]);\r\n\r\n    return(\r\n    <><div className=\"emotion-container\">\r\n        <div className=\"title\">\r\n            <h2>It's totally</h2><h1>OK</h1><h3>to feel {emotionObj.title.toLowerCase()} <i>{emotionObj.icon}</i></h3>\r\n        </div>\r\n        <div className=\"links\">\r\n            {!emotionObj.positive && country.phones && <EmotionChip label={\"Call Local Helpline\"} icon={\"📞\"} iconFirst={true} url={`tel:${country.phones[0]}`} />}\r\n            {emotionObj.links.map((i,k)=>{ return i.title ? <EmotionChip label={i.title} icon={i.icon} iconFirst={true} url={i.url} key={k}/> : null})}            \r\n            <EmotionChip cssClass={\"share\"} label={\"Share\"} icon={\"↗️\"} iconFirst={true} chipClick={shareApi}/>\r\n        </div>\r\n       \r\n    </div>\r\n    <Footer/></>);\r\n}\r\nexport default Emotion;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport {play, exit} from './utils/timelines';\nimport backgrounds from './data/backgrounds.json';\n\nimport './index.css';\nimport Emotions from './components/Emotions';\nimport Emotion from './components/Emotion';\n\n\n\nfetch(`/data/config.json`)\n.then((r) => r.json())\n.then((data) =>{\n  ReactDOM.render(\n    <Router>\n        <Route render={({location})=>{\n          const { pathname, key } = location\n          return(\n            <TransitionGroup component={null}>\n              <Transition\n                key={key}\n                appear={true}\n                onEnter={(node, appears) => play(pathname, node, appears)}\n                onExit={(node, appears) => exit(node, appears)}\n                timeout={{enter: 750, exit: 0}}\n              >\n                <Switch location={location}>\n                  <Route exact path=\"/\"><Emotions  data={data}/></Route>\n                  <Route path=\"/:emotion\"><Emotion  data={data}/></Route>\n                  \n                </Switch>\n              </Transition>                \n            </TransitionGroup>\n          )\n        }}/>\n    </Router>,\ndocument.getElementById('root')\n);\n})\n\n"],"sourceRoot":""}