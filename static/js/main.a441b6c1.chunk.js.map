{"version":3,"sources":["utils/timelines.js","containers/EmotionChip.jsx","components/Footer.jsx","components/Emotions.jsx","components/Emotion.jsx","index.js"],"names":["play","pathname","node","appears","delay","document","body","className","timeline","Timeline","paused","from","autoAlpha","ease","Power1","easeIn","getPageTransitionTimeline","EmotionChip","label","icon","iconFirst","url","cssClass","chipObj","indexOf","to","href","target","Footer","Date","getFullYear","Emotions","data","useLayoutEffect","emotions","map","i","k","title","toLowerCase","Emotion","emotion","useParams","emotionObj","find","useEffect","backgroundNum","Math","floor","random","backgrounds","length","backgroundObj","style","backgroundColor","color","positive","links","fetch","then","r","json","ReactDOM","render","location","key","TransitionGroup","component","Transition","appear","onEnter","onExit","easeOut","exit","timeout","enter","exact","path","getElementById"],"mappings":"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","file":"static/js/main.a441b6c1.chunk.js","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\r\n\r\nconst getPageTransitionTimeline = (node, delay) => {\r\n  const timeline = new Timeline({ paused: true });\r\n  timeline\r\n    .from(node, 0.4, {autoAlpha: 0, delay, ease: Power1.easeIn })\r\n\r\n  return timeline;\r\n}\r\n\r\nexport const play = (pathname, node, appears) => {\r\n  const delay = appears ? 0 : 0.4;\r\n  let timeline\r\n\r\n  if(pathname == '/'){\r\n    document.body.className='emotions';\r\n  }\r\n\r\n  timeline = getPageTransitionTimeline(node, delay);\r\n  timeline.play();  \r\n}\r\n\r\nexport const exit = (node) => {\r\n  const timeline = new Timeline({ paused: true });\r\n\r\n  timeline.to(node, 0.4, { autoAlpha: 0, ease: Power1.easeOut });\r\n  timeline.play();\r\n}\r\n","import React, {useRef} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './EmotionChip.css';\r\n\r\nconst EmotionChip = ({label, icon, iconFirst, url, cssClass = ''}) => {\r\n    let chipObj = <span className={`e-chip ${cssClass}`}> \r\n        {iconFirst&&<i>{icon}</i>}\r\n        &nbsp;{label}&nbsp;\r\n        {!iconFirst&&<i>{icon}</i>}\r\n    </span>;\r\n\r\n    if(url){\r\n        if(url.indexOf('/')==0){\r\n            return <Link to={url}>{chipObj}</Link>\r\n        }else{\r\n            return <a href={url} target={\"_blank\"}>{chipObj}</a>\r\n        }\r\n    }\r\n    return(chipObj);\r\n}\r\nexport default EmotionChip;","import React, {useEffect} from 'react';\r\nimport styles from './Footer.css';\r\n\r\nconst Footer = () => {\r\n    return(\r\n    <div className=\"footer\">\r\n        <a href=\"https://itstotallyok.com\"><i>💚</i><b>itstotallyok</b>.com</a>\r\n        <span>©Fade Rudman {(new Date()).getFullYear()}. All Rights Reserved.</span>\r\n    </div>);\r\n}\r\nexport default Footer;","import { Chip } from 'material-ui';\r\nimport React, {useEffect, useLayoutEffect} from 'react';\r\nimport styles from './Emotions.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport Footer from '../components/Footer';\r\nimport emotions from '../data/emotions.json';\r\n\r\nconst Emotions = ({data}) => {\r\n    useLayoutEffect(() => {        \r\n        document.body.className='emotions';\r\n    });\r\n    \r\n    return(\r\n    <div className=\"emotions-container\">\r\n        <h3>How Do You Feel?</h3>\r\n        {data.emotions.map((i,k)=>{ return <EmotionChip label={i.title} icon={i.icon} iconFirst={false} url={`/${i.title.toLowerCase()}`} key={k}/>})}\r\n    </div>);\r\n}\r\nexport default Emotions;","import React, {useEffect} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport styles from './Emotion.css';\r\nimport EmotionChip from '../containers/EmotionChip';\r\nimport emotions from '../data/emotions.json';\r\nimport backgrounds from '../data/backgrounds.json';\r\n\r\n\r\nconst Emotion = ({data}) => {\r\n    let {emotion} = useParams();\r\n    emotion = emotion.toLowerCase();\r\n    \r\n    const emotionObj = data.emotions.find(i=>i.title.toLowerCase()==emotion);\r\n    \r\n    \r\n    useEffect(() => {      \r\n        if(!emotionObj)  \r\n            return;\r\n\r\n        const backgroundNum = Math.floor(Math.random() * data.backgrounds.length);\r\n        const backgroundObj = data.backgrounds[backgroundNum];\r\n\r\n        document.body.className = `emotion ${backgroundObj[\"light-content\"]?'light':'dark'}`;\r\n        document.body.style.backgroundColor = backgroundObj.color;\r\n\r\n        return () => {\r\n            document.body.className = ``;\r\n            document.body.style.backgroundColor = null;\r\n        };\r\n\r\n    },[emotionObj]);\r\n\r\n    return(\r\n    <div className=\"emotion-container\">\r\n        <div className=\"title\">\r\n            <h2>It's totally</h2><h1>OK</h1><h3>to feel {emotionObj.title.toLowerCase()} <i>{emotionObj.icon}</i></h3>\r\n        </div>\r\n        <div className=\"links\">\r\n            {!emotionObj.positive && <EmotionChip label={\"Call Local Helpline\"} icon={\"📞\"} iconFirst={true} />}\r\n            {emotionObj.links.map((i,k)=>{ return i.title ? <EmotionChip label={i.title} icon={i.icon} iconFirst={true} url={i.url} key={k}/> : null})}            \r\n            <EmotionChip cssClass={\"share\"} label={\"Share\"} icon={\"↗️\"} iconFirst={true} />\r\n        </div>\r\n    </div>);\r\n}\r\nexport default Emotion;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport {play, exit} from './utils/timelines';\nimport backgrounds from './data/backgrounds.json';\n\nimport './index.css';\nimport Emotions from './components/Emotions';\nimport Emotion from './components/Emotion';\nimport Footer from './components/Footer';\n\n\nfetch(`/data/config.json`)\n.then((r) => r.json())\n.then((data) =>{\n  ReactDOM.render(\n    <Router>\n        <Route render={({location})=>{\n          const { pathname, key } = location\n          return(\n            <TransitionGroup component={null}>\n              <Transition\n                key={key}\n                appear={true}\n                onEnter={(node, appears) => play(pathname, node, appears)}\n                onExit={(node, appears) => exit(node, appears)}\n                timeout={{enter: 750, exit: 0}}\n              >\n                <Switch location={location}>\n                  <Route exact path=\"/\"><Emotions  data={data}/></Route>\n                  <Route path=\"/:emotion\"><Emotion  data={data}/></Route>\n                  \n                </Switch>\n              </Transition>                \n            </TransitionGroup>\n          )\n        }}/>\n        <Footer/>\n    </Router>,\ndocument.getElementById('root')\n);\n})\n\n"],"sourceRoot":""}